{
  "Resources": {
    "UserPool6BA7E5F2": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1
            },
            {
              "Name": "verified_email",
              "Priority": 2
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "Policies": {
          "PasswordPolicy": {
            "MinimumLength": 6,
            "RequireLowercase": false,
            "RequireNumbers": false,
            "RequireSymbols": false,
            "RequireUppercase": false
          }
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/UserPool/Resource"
      }
    },
    "UserPoolClient2F5918F7": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Ref": "UserPool6BA7E5F2"
        },
        "AllowedOAuthFlows": [
          "implicit",
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin"
        ],
        "CallbackURLs": [
          "https://example.com"
        ],
        "ExplicitAuthFlows": [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "GenerateSecret": false,
        "SupportedIdentityProviders": [
          "COGNITO"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/UserPoolClient/Resource"
      }
    },
    "UserPoolIdentity": {
      "Type": "AWS::Cognito::IdentityPool",
      "Properties": {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": {
              "Ref": "UserPoolClient2F5918F7"
            },
            "ProviderName": {
              "Fn::GetAtt": [
                "UserPool6BA7E5F2",
                "ProviderName"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/UserPoolIdentity"
      }
    },
    "UserPoolUser": {
      "Type": "AWS::Cognito::UserPoolUser",
      "Properties": {
        "UserPoolId": {
          "Ref": "UserPool6BA7E5F2"
        },
        "Username": "iotcore"
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/UserPoolUser"
      }
    },
    "CognitoForceUserPasswordCustomResourcePolicy835DF5D2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cognito-idp:AdminSetUserPassword",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CognitoForceUserPasswordCustomResourcePolicy835DF5D2",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/CognitoForceUserPassword/CustomResourcePolicy/Resource"
      }
    },
    "CognitoForceUserPassword476D1CA4": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"adminSetUserPassword\",\"parameters\":{\"Password\":\"iotcore\",\"UserPoolId\":\"",
              {
                "Ref": "UserPool6BA7E5F2"
              },
              "\",\"Username\":\"iotcore\",\"Permanent\":true},\"physicalResourceId\":{\"id\":\"",
              {
                "Ref": "UserPool6BA7E5F2"
              },
              "\"}}"
            ]
          ]
        },
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "CognitoForceUserPasswordCustomResourcePolicy835DF5D2"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/CognitoForceUserPassword/Resource/Default"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf3d3a3cc7f26921b237eff24fc5dd7aef8f0465a1f376b8f7918eb3d4b3e8797S3BucketBEE108A9"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf3d3a3cc7f26921b237eff24fc5dd7aef8f0465a1f376b8f7918eb3d4b3e8797S3VersionKeyA877E3C9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf3d3a3cc7f26921b237eff24fc5dd7aef8f0465a1f376b8f7918eb3d4b3e8797S3VersionKeyA877E3C9"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
        "aws:asset:path": "asset.f3d3a3cc7f26921b237eff24fc5dd7aef8f0465a1f376b8f7918eb3d4b3e8797",
        "aws:asset:property": "Code"
      }
    },
    "LambdaSetCookieServiceRoleF79C37BC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/LambdaSetCookie/ServiceRole/Resource"
      }
    },
    "LambdaSetCookieD15F2174": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters6b0345ee6b3d8630fc83a42b08cd7f3a056a6894a33b21255d64ea3fe5d89d58S3Bucket2080916B"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters6b0345ee6b3d8630fc83a42b08cd7f3a056a6894a33b21255d64ea3fe5d89d58S3VersionKeyCD3AD80D"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters6b0345ee6b3d8630fc83a42b08cd7f3a056a6894a33b21255d64ea3fe5d89d58S3VersionKeyCD3AD80D"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaSetCookieServiceRoleF79C37BC",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 15
      },
      "DependsOn": [
        "LambdaSetCookieServiceRoleF79C37BC"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/LambdaSetCookie/Resource",
        "aws:asset:path": "asset.6b0345ee6b3d8630fc83a42b08cd7f3a056a6894a33b21255d64ea3fe5d89d58",
        "aws:asset:property": "Code"
      }
    },
    "LambdaCorsServiceRoleC4A512D9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/LambdaCors/ServiceRole/Resource"
      }
    },
    "LambdaCors22607DD4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0be7d60ccb14964fab0fd6e3f1de16260ea18f347a265d5d90332680ed62f923S3BucketD92AFC1C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0be7d60ccb14964fab0fd6e3f1de16260ea18f347a265d5d90332680ed62f923S3VersionKey9C8873A4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0be7d60ccb14964fab0fd6e3f1de16260ea18f347a265d5d90332680ed62f923S3VersionKey9C8873A4"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaCorsServiceRoleC4A512D9",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 15
      },
      "DependsOn": [
        "LambdaCorsServiceRoleC4A512D9"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/LambdaCors/Resource",
        "aws:asset:path": "asset.0be7d60ccb14964fab0fd6e3f1de16260ea18f347a265d5d90332680ed62f923",
        "aws:asset:property": "Code"
      }
    },
    "ApiCookie2D77733F": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "ApiCookie"
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/Resource"
      }
    },
    "ApiCookieCloudWatchRole5CCCF78B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/CloudWatchRole/Resource"
      }
    },
    "ApiCookieAccountAA3479D6": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiCookieCloudWatchRole5CCCF78B",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ApiCookie2D77733F"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/Account"
      }
    },
    "ApiCookieDeployment0D2707EA7500c9a80cfeb94405dda95346125ea2": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiCookie2D77733F"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "ApiCookieOPTIONS8ED9EC74",
        "ApiCookiePOSTCE26D273"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/Deployment/Resource"
      }
    },
    "ApiCookieDeploymentStageprod876FF2BF": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiCookie2D77733F"
        },
        "DeploymentId": {
          "Ref": "ApiCookieDeployment0D2707EA7500c9a80cfeb94405dda95346125ea2"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/DeploymentStage.prod/Resource"
      }
    },
    "ApiCookiePOSTApiPermissionCdkWebSshStackApiCookie73C664D5POST2E9E342C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaSetCookieD15F2174",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiCookie2D77733F"
              },
              "/",
              {
                "Ref": "ApiCookieDeploymentStageprod876FF2BF"
              },
              "/POST/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/Default/POST/ApiPermission.CdkWebSshStackApiCookie73C664D5.POST.."
      }
    },
    "ApiCookiePOSTApiPermissionTestCdkWebSshStackApiCookie73C664D5POST93FDA442": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaSetCookieD15F2174",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiCookie2D77733F"
              },
              "/test-invoke-stage/POST/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/Default/POST/ApiPermission.Test.CdkWebSshStackApiCookie73C664D5.POST.."
      }
    },
    "ApiCookiePOSTCE26D273": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiCookie2D77733F",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiCookie2D77733F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LambdaSetCookieD15F2174",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/Default/POST/Resource"
      }
    },
    "ApiCookieOPTIONSApiPermissionCdkWebSshStackApiCookie73C664D5OPTIONS77A63023": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaCors22607DD4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiCookie2D77733F"
              },
              "/",
              {
                "Ref": "ApiCookieDeploymentStageprod876FF2BF"
              },
              "/OPTIONS/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/Default/OPTIONS/ApiPermission.CdkWebSshStackApiCookie73C664D5.OPTIONS.."
      }
    },
    "ApiCookieOPTIONSApiPermissionTestCdkWebSshStackApiCookie73C664D5OPTIONSE2E0557D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaCors22607DD4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiCookie2D77733F"
              },
              "/test-invoke-stage/OPTIONS/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/Default/OPTIONS/ApiPermission.Test.CdkWebSshStackApiCookie73C664D5.OPTIONS.."
      }
    },
    "ApiCookieOPTIONS8ED9EC74": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiCookie2D77733F",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiCookie2D77733F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LambdaCors22607DD4",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/ApiCookie/Default/OPTIONS/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAE12R3U7DMAyFn4X7NKPi55qtCIkLRDXEA4TUlGxNXMUOU1X13XHabQyu/LnHqX3sUpflnb6+ejAHKmyzX40WI+jxjY3dq+ozvCbuE6sqEaPfAmGKFrJw5jURsNS3LrSqwkAck+VcUptoPDDEnIjSOHYYJpV7SZ82OEY9vhPEGrHLRWc+QdU5CHwp/X55bgQcD/8f5zipzviPxogTGasDxvCUgs391RnkzSXXEL0jmkd0xuuxxs7ZYZYW2mK3eJc4KbopTPZOel6B5HqT7B54YwiU6V1rGA5m0KPsite9O67thGtrMYmVR+g7HPzR1UWWlzr3W+C08fn3L8Bf2GRxoWlSdr5REY9lMtaB/t5tUgEb0DtafZe3uryXw+/IuSLKGM6D3i7xBzzIjJ8VAgAA"
      },
      "Metadata": {
        "aws:cdk:path": "CdkWebSshStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "UserPoolId": {
      "Value": {
        "Ref": "UserPool6BA7E5F2"
      }
    },
    "UserPoolWebClientId": {
      "Value": {
        "Ref": "UserPoolClient2F5918F7"
      }
    },
    "UserPoolIdentityId": {
      "Value": {
        "Ref": "UserPoolIdentity"
      }
    },
    "ApiCookieEndpoint16218B10": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiCookie2D77733F"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "ApiCookieDeploymentStageprod876FF2BF"
            },
            "/"
          ]
        ]
      }
    },
    "ApiCookieUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiCookie2D77733F"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "ApiCookieDeploymentStageprod876FF2BF"
            },
            "/"
          ]
        ]
      }
    },
    "AwsRegion": {
      "Value": {
        "Ref": "AWS::Region"
      }
    }
  },
  "Parameters": {
    "AssetParametersf3d3a3cc7f26921b237eff24fc5dd7aef8f0465a1f376b8f7918eb3d4b3e8797S3BucketBEE108A9": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f3d3a3cc7f26921b237eff24fc5dd7aef8f0465a1f376b8f7918eb3d4b3e8797\""
    },
    "AssetParametersf3d3a3cc7f26921b237eff24fc5dd7aef8f0465a1f376b8f7918eb3d4b3e8797S3VersionKeyA877E3C9": {
      "Type": "String",
      "Description": "S3 key for asset version \"f3d3a3cc7f26921b237eff24fc5dd7aef8f0465a1f376b8f7918eb3d4b3e8797\""
    },
    "AssetParametersf3d3a3cc7f26921b237eff24fc5dd7aef8f0465a1f376b8f7918eb3d4b3e8797ArtifactHashAAFCA968": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f3d3a3cc7f26921b237eff24fc5dd7aef8f0465a1f376b8f7918eb3d4b3e8797\""
    },
    "AssetParameters6b0345ee6b3d8630fc83a42b08cd7f3a056a6894a33b21255d64ea3fe5d89d58S3Bucket2080916B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"6b0345ee6b3d8630fc83a42b08cd7f3a056a6894a33b21255d64ea3fe5d89d58\""
    },
    "AssetParameters6b0345ee6b3d8630fc83a42b08cd7f3a056a6894a33b21255d64ea3fe5d89d58S3VersionKeyCD3AD80D": {
      "Type": "String",
      "Description": "S3 key for asset version \"6b0345ee6b3d8630fc83a42b08cd7f3a056a6894a33b21255d64ea3fe5d89d58\""
    },
    "AssetParameters6b0345ee6b3d8630fc83a42b08cd7f3a056a6894a33b21255d64ea3fe5d89d58ArtifactHash1FDBDA0F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"6b0345ee6b3d8630fc83a42b08cd7f3a056a6894a33b21255d64ea3fe5d89d58\""
    },
    "AssetParameters0be7d60ccb14964fab0fd6e3f1de16260ea18f347a265d5d90332680ed62f923S3BucketD92AFC1C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"0be7d60ccb14964fab0fd6e3f1de16260ea18f347a265d5d90332680ed62f923\""
    },
    "AssetParameters0be7d60ccb14964fab0fd6e3f1de16260ea18f347a265d5d90332680ed62f923S3VersionKey9C8873A4": {
      "Type": "String",
      "Description": "S3 key for asset version \"0be7d60ccb14964fab0fd6e3f1de16260ea18f347a265d5d90332680ed62f923\""
    },
    "AssetParameters0be7d60ccb14964fab0fd6e3f1de16260ea18f347a265d5d90332680ed62f923ArtifactHash9E292956": {
      "Type": "String",
      "Description": "Artifact hash for asset \"0be7d60ccb14964fab0fd6e3f1de16260ea18f347a265d5d90332680ed62f923\""
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}